
@model BulkUpdate
<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css"
      rel="stylesheet">  
    <h4>Bulk Config Mass Updater</h4>
    <hr />
    <script type="text/javascript">
        function OnlyNumeric(e) {
            if ((e.which < 48 || e.which > 57)) {
                if (e.which == 8 || e.which == 46 || e.which == 0)
                    return true;
                else return e.which;
            }
        }
        function updateui() {
            document.getElementById('Submit').value = 'Running CONFIG IMPORT...';
            document.getElementById('spin').style.visibility = "visible";
        }
    </script>


    @using (Html.BeginForm("ImportExcelFile", "Home", FormMethod.Post))
    {
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

        <div style="width:70%">
            <table class="table table-striped">

                <tr style="background-color:lightblue;font-weight:bold">
                    <td style="width:25%">@Html.LabelFor(model => model.Environment)</td>
                    <td style="width:25%">
                        @Html.RadioButtonFor(model => model.Environment, PortalWebApp.Utilities.Util.Env.Dev.Value, new { Id = "Development" })
                        <label for="Development">&nbsp;Development</label>
                    </td>
                    <td style="width:25%">
                        <input id="Production" name="Environment" type="radio" value="Server=Prod" data-toggle="modal" data-target="#warningModal">

                        <label for="Production">&nbsp;Production</label>
                    </td>
                </tr>

                <tr><td>&nbsp;</td></tr>

                <tr>
                    <td style="width:25%">@Html.LabelFor(model => model.UserID)</td>
                    <td>
                        <select asp-for="UserID" class="form-control" asp-items="@(new SelectList(ViewBag.ListofUser,"Value","Text"))">
                        </select>
                    </td>
                    <td style="color:red;font: all-petite-caps;font-weight:bold"> @Html.ValidationMessageFor(model => model.UserID)</td>
                </tr>

                <tr>
                    <td>@Html.LabelFor(model => model.ThrottleNum)</td>
                    <td>

                        @Html.EditorFor(model => model.ThrottleNum, new
                       {
                           htmlAttributes = new
                           {
                               @type = "number",
                                @min = "0",
                                @max = "100",
                                @step = "1",
                               @onkeypress = "OnlyNumeric(this);",
                                Class = "form-control"
                           }
                       })
                    </td>
                    <td style="color:red;font: all-petite-caps;font-weight:bold;">@Html.ValidationMessageFor(model => model.ThrottleNum)</td>
                </tr>

                <tr>
                    <td>@Html.LabelFor(model => model.ThrottleDuration)</td>
                    <td>
                        @Html.EditorFor(model => model.ThrottleDuration, new
                        {
                            htmlAttributes = new
                            {
                                @type = "number",
                                @min = "0",
                                @max = "100",
                                @step = "1",
                                @onkeypress = "OnlyNumeric(this);",
                                Class = "form-control"
                            }
                        })
                    </td>
                    <td style="color:red;font: all-petite-caps;font-weight:bold">@Html.ValidationMessageFor(model => model.ThrottleDuration)</td>
                </tr>

                <tr>
                    <td>
                        @Html.LabelFor(model => model.RTU)
                    </td>
                    <td colspan="2">
                        @Html.CheckBoxFor(model => model.RTU)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.HiddenFor(model => model.FileName)Select File:
                    </td>
                    <td colspan="2">
                        <input type="file" model onchange="document.getElementById('FileName').value = this.value;" name="file1" id="file1" value="s" />
                    </td>

                </tr>

                <tr>
                    <td colspan="3">
                        <span style="color:green">@Html.Raw(ViewBag.Message)</span>
                        <button name="button" runat="server" class="btn btn-success" id="btnRun" value="cph" asp-action="check">Run</button>
                        <input id="Submit" class="btn btn-success" type="submit" value="Run BULK CONFIG IMPORT" disabled onclick="updateui() " />
                        &nbsp;&nbsp;&nbsp;
                        <div id="spin" class="spinner-border" role="status" style="visibility:hidden">
                            <span class="sr-only">Loading...</span>
                        </div>
                        <br /><br />

                        <div id="divAlert" runat="server" class="alert alert-success alert-dismissible  fade show" role="alert">
                            <strong>&nbsp;@TempData["Status"]</strong>
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div id="divProcessed1">
                            <strong>Total Rows::::</strong>
                            @Html.LabelFor(model => model.TotalRows, "Rows to process", new { Class = "form-label" })
                        </div>
                        <input type="button" value="hello" id="hello" model asp-action="check" />
                    </td>
                </tr>
            </table>
        </div>
        <div>

            <div class="container">
                <div class="col-sm-2">        <input type="button" id="UploadBtn" class="btn btn-danger" value="Upload" />      </div>
                <div class="progress">
                    <div id="prog" class="progress-bar progress-bar-striped" role="progressbar" style="min-width: 100%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            </div>
        </div>

        <!-- Modal -->
        <div class="modal fade" id="warningModal" tabindex="-1" role="dialog" aria-labelledby="warningModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-confirm">
                <div class="modal-content">
                    <div class="modal-header  justify-content-center flex-column icon-box">
                        <div class="modal-title w-100" style="text-align:center;">
                            <i class="material-icons" style="font-size:48px; color:red">info</i>Confirm!
                        </div>
                    </div>
                    <div class="modal-body">
                        <div style="text-align:center;font-weight:bolder">You are about about to run in PROD.</div>
                        <div style="text-align:center;">Please change the radio button to DEV if this was in error.</div>
                    </div>
                    <div class="modal-footer justify-content-center">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">OK</button>
                    </div>
                </div>
            </div> 
        </div>
    }

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    @section scripts{
        <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
        <script src="https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
        <script>

            $('#UploadBtn').click(function () {
                var fileData = new FormData();
                $.ajax({
                    url: '/Home/UploadFiles',
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData,
                    async: false,
                    success: function (result) {
                        console.log(result);
                        if (result != "") {
                            LoadProgressBar(result); //calling LoadProgressBar function to load the progress bar.
                        }
                    },
                    error: function (err) { alert(err.statusText); }
                });

            });

            function LoadProgressBar(result) {
                var progressbar = $("#prog");
                progressbar.show();
                $("#prog").progressbar({
                    value: false,
                    change: function () {
                        var progval = progressbar.progressbar("value") + "%";
                        console.log(progval);
                        //  progressLabel.text(progval);  // Showing the progress increment value in progress bar
                    },
                    complete: function () {
                        progressbar.hide();
                    }
                });
                function progress() {
                    var val = progressbar.progressbar("value") || 0;
                    progressbar.progressbar("value", val + 1);
                    console.log("inside the fuction");
                    if (val < 99) {
                        setTimeout(progress, 25);
                    }
                }
                setTimeout(progress, 100);
            }
        </script>
    }
